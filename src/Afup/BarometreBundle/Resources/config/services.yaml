services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
          # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

    _instanceof:
        Afup\Barometre\RequestModifier\RequestModifierInterface:
            tags: [ 'barometre.request_modifier' ]

        Afup\Barometre\Filter\FilterInterface:
            tags: [ 'barometre.filter' ]

        Afup\BarometreBundle\Enums\EnumsInterface:
            tags: [ 'barometre.enums' ]

    Afup\BarometreBundle\:
        resource: '../../*'
        exclude: '../../{DependencyInjection,Entity}'

    Afup\Barometre\:
        resource: '../../../Barometre/*'

    Afup\BarometreBundle\Controller\:
        resource: '../../Controller'
        tags: ['controller.service_arguments']

    Afup\Barometre\ReportManager:
        shared: false
        public: true

    Afup\BarometreBundle\DataTest\CustomNativeLoader:
        public: true

    Afup\BarometreBundle\Campaign\ResponseFactory:
        bind:
            $numberFormatter: !service { class: NumberFormatter, arguments: ['fr', 1] }
