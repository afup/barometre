# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        bind:
            $minResult: "%min_result%"

    _instanceof:
        Afup\Barometre\Report\ReportInterface:
            tags: ['barometre.report']

        Afup\Barometre\Filter\FilterInterface:
            tags: ['barometre.filter']

        Afup\BarometreBundle\Enums\EnumsInterface:
            tags: ['barometre.enums']

    Afup\Barometre\:
        resource: '../../src/Afup/Barometre/*'

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Afup\BarometreBundle\:
        resource: '../../src/Afup/BarometreBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/Afup/BarometreBundle/Entity'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    Afup\BarometreBundle\Controller\:
        resource: '../../src/Afup/BarometreBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    Afup\BarometreBundle\Entity\CampaignRepository: ~
    Afup\Barometre\Filter\FilterCollection:
        arguments: [!tagged barometre.filter]
    Afup\Barometre\Report\ReportCollection:
        arguments: [!tagged barometre.report]
    Afup\BarometreBundle\Enums\EnumsCollection:
        arguments: [!tagged barometre.enums]
